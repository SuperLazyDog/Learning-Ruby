<h1>ModelTest#t4</h1>
<p>Find me in app/views/model_test/t4.html.erb</p>

<span>更新: 2017/06/21</span>
<div><br></div>
<div><br></div>
<div>模型(model)</div>
<div>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td colspan="2" style="text-align: center;">
&nbsp;<b><font style="font-size: 20px;">模型(model)</font></b></td>
</tr>

<tr>
<td><a href="http://blog.sina.com.cn/s/blog_dcb875d90102y62t.html" target="_blank">&nbsp;生成</a></td>
<td>&nbsp;rails generate model name field:type [...]
[options]<br style="color: rgb(50, 62, 50); font-family: Verdana, 宋体, sans-serif; font-size: 12px; background-color: rgb(0, 0, 0);">

<span style="background-color: rgb(255, 255, 255);"><span style="font-family: Verdana, 宋体, sans-serif; font-size: 12px;">&nbsp;</span><wbr style="font-family: Verdana, 宋体, sans-serif; font-size: 12px;"><span style="font-family: Verdana, 宋体, sans-serif; font-size: 12px;">P48</span><br style="font-family: Verdana, 宋体, sans-serif; font-size: 12px;">

<span style="font-family: Verdana, 宋体, sans-serif; font-size: 12px;">类型首字母不大写</span><br style="font-family: Verdana, 宋体, sans-serif; font-size: 12px;">

<span style="font-family: Verdana, 宋体, sans-serif; font-size: 12px;">&nbsp;</span><wbr style="font-family: Verdana, 宋体, sans-serif; font-size: 12px;"><span style="font-family: Verdana, 宋体, sans-serif; font-size: 12px;">app<br>
</span><br style="font-family: Verdana, 宋体, sans-serif; font-size: 12px;">
<span style="font-family: Verdana, 宋体, sans-serif; font-size: 12px;">例子:&nbsp;</span><wbr style="font-family: Verdana, 宋体, sans-serif; font-size: 12px;"></span>
<p style="margin: 0px 0px 5px; padding: 0px; border: 0px; list-style: none; word-wrap: normal; word-break: normal; line-height: 18px; font-family: Verdana, 宋体, sans-serif; font-size: 12px;">
<span style="word-wrap: normal; word-break: normal; line-height: 18px; background-color: rgb(255, 255, 255);">
rails g model questionnaire
question:string&nbsp;</span></p>
<p style="margin: 0px 0px 5px; padding: 0px; border: 0px; list-style: none; word-wrap: normal; word-break: normal; line-height: 18px; font-family: Verdana, 宋体, sans-serif; font-size: 12px;">
<span style="word-wrap: normal; word-break: normal; line-height: 18px; background-color: rgb(255, 255, 255);">
veryAgree:boolean agree:boolean</span></p>
<p style="margin: 0px 0px 5px; padding: 0px; border: 0px; list-style: none; word-wrap: normal; word-break: normal; line-height: 18px; font-family: Verdana, 宋体, sans-serif; font-size: 12px;">
<span style="word-wrap: normal; word-break: normal; line-height: 18px; background-color: rgb(255, 255, 255);">
disagree:boolean veryDisagree:boolean</span></p>
<p style="margin: 0px 0px 5px; padding: 0px; border: 0px; list-style: none; word-wrap: normal; word-break: normal; line-height: 18px; font-family: Verdana, 宋体, sans-serif; font-size: 12px;">
<span style="word-wrap: normal; word-break: normal; line-height: 18px; background-color: rgb(255, 255, 255);">
<br></span></p>
<p style="margin: 0px 0px 5px; padding: 0px; border: 0px; list-style: none; word-wrap: normal; word-break: normal; line-height: 18px; font-family: Verdana, 宋体, sans-serif; font-size: 12px;">
<br></p>
</td>
</tr>

<tr>
<td>迁移文件的生成</td>
<td>和模型一起生成 rails generate model name field:type [...]
[options]<br>
&nbsp;单独生成 rails generate migration name [field:type
...] [options]</td>
</tr>

<tr>
<td>&nbsp;自带属性</td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;概要</td>
<td>&nbsp;键名</td>
</tr>

<tr>
<td>&nbsp;主键(自动生成)</td>
<td>&nbsp;id</td>
</tr>

<tr>
<td>&nbsp;记录(record)的生成时间&nbsp;</td>
<td>&nbsp;created_at&nbsp;</td>
</tr>

<tr>
<td>&nbsp;记录(record)的更新时间</td>
<td>&nbsp;updated_at</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;rails命令行</td>
<td>&nbsp;命令行测试模块(model)


<table border="1" cellpadding="3" cellspacing="1" style="width: 100%;">

<tbody>

<tr>
<td>&nbsp;启动</td>
<td>&nbsp;rails console opts<br>


<table border="1" cellpadding="3" cellspacing="1" style="width: 100%;">

<tbody>

<tr>
<td>&nbsp;指定运行环境</td>
<td>&nbsp;rails console
test/development/production<br>
&nbsp;默认development</td>
</tr>

<tr>
<td>&nbsp;不保留变更</td>
<td>&nbsp;-s<br>
&nbsp;--sandbox&nbsp;</td>
</tr>

<tr>
<td><br></td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;新建</td>
<td>&nbsp;test = modelTest.new(hp: 1200, mp:9999, ad:
12345)</td>
</tr>

<tr>
<td>&nbsp;保存</td>
<td>&nbsp;test.save</td>
</tr>

<tr>
<td>&nbsp;获取最后一个数据</td>
<td>&nbsp;last = ModelTest.last</td>
</tr>

<tr>
<td>&nbsp;退出命令行</td>
<td>&nbsp;quit</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
<br></td>
</tr>

<tr>
<td>&nbsp;<b style="font-family: Verdana, 宋体, sans-serif; background-color: rgb(255, 255, 255);">查看履历</b></td>
<td>&nbsp;<b style="font-family: Verdana, 宋体, sans-serif; background-color: rgb(255, 255, 255);">&nbsp;rails
db:migrate:status</b><b style="font-family: Verdana, 宋体, sans-serif; background-color: rgb(255, 255, 255);"><br>

------------------------------------------------------------------------------<br>
</b><a href="http://blog.photo.sina.com.cn/showpic.html#url=http://album.sina.com.cn/pic/0042BJjjzy7c52pMivX15" target="_blank"><img src="http://s6.sinaimg.cn/bmiddle/0042BJjjzy7c52pMivX15&amp;690" id="image_operate_45491498159948507"></a><br>

<b style="font-family: Verdana, 宋体, sans-serif; background-color: rgb(255, 255, 255);">
------------------------------------------------------------------------------</b></td>
</tr>

<tr>
<td>&nbsp;生成数据库</td>
<td>&nbsp;rails db:migrate<br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;db:migrate<br style="background-color: rgb(255, 255, 255);">
<span style="font-family: Verdana, 宋体, sans-serif; background-color: rgb(255, 255, 255);">
&nbsp;</span></td>
<td>&nbsp;运行到指定的版本处(VERSION=...)<br>
&nbsp;不指定就是用最新版，把所有没迁移的全部迁移了<br>
例: rails db:migrate VERSION=20161205000859</td>
</tr>

<tr>
<td>&nbsp;db:rollback</td>
<td>&nbsp;回滚指定步<br>
例: rails db:rollback STEP=5</td>
</tr>

<tr>
<td>&nbsp;db:migrate:redo</td>
<td>&nbsp;回滚指定步并且重新迁移<br>
例: rails db:migrate:redo STEP=5</td>
</tr>

<tr>
<td>&nbsp;db:migrate:reset</td>
<td>&nbsp;先删除数据库，然后重新生成并且迁移最新版本<br>
例: rails db:migrate:reset&nbsp;<br>
删除production环境下的数据库<br>
DISABLE_DATABASE_ENVIRONMENT_CHECK=1<br>
windows下删除development下数据貌似也要p312<br></td>
</tr>

<tr>
<td><b>&nbsp;选项</b></td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;RAILS_ENV</td>
<td>&nbsp;设置测试用数据库环境: production, development,
test<br>
&nbsp;默认 RAILS_ENV=development</td>
</tr>

<tr>
<td>&nbsp;VERBOSE</td>
<td>&nbsp;是否在命令行输出迁移的过程<br>
&nbsp;默认true<br>
&nbsp;VERBOSE=false</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
<font style="background-color: rgb(255, 255, 255);"><span style="font-family: Verdana, 宋体, sans-serif; font-size: 12px;">&nbsp;</span></font></td>
</tr>

<tr>
<td>生成并读取数据库&nbsp;</td>
<td>&nbsp;rails db:setup</td>
</tr>

<tr>
<td>&nbsp;schema来构筑数据库</td>
<td><br>


<table border="1" cellpadding="3" cellspacing="1" style="width: 100%;">

<tbody>

<tr>
<td>schema文件位置</td>
<td>&nbsp;位置/app/db/schema.rb</td>
</tr>

<tr>
<td>&nbsp;意义</td>
<td>&nbsp;自动获取最新的数据库表格信息<br>
&nbsp;和迁移文件一样可能会有无法展现的对象(object)</td>
</tr>

<tr>
<td>&nbsp;放弃现在的数据库，<br>
&nbsp;用schema来构筑最新的数据库</td>
<td>&nbsp;rails db:reset<br>
windows环境下加DISABLE_DATABASE_ENVIROMENT=1<br>
<br>
注意: 只是重构，测试数据要另外读取</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;seed</td>
<td>&nbsp;初始数据来初始化(也可以用fixture)<br>

<table border="1" cellpadding="3" cellspacing="1" style="width: 688px;">

<tbody>

<tr>
<td>&nbsp;位置</td>
<td>&nbsp;db/seed.rb<br>&nbsp;可能需要自己新建</td>
</tr>

<tr>
<td>&nbsp;形式</td>
<td>&nbsp;ruby脚本<br></td>
</tr>

<tr>
<td>&nbsp;内容</td>
<td>&nbsp;只需要写生成/保存数据的代码<br><br>&nbsp;如Sample.new(...)<br>&nbsp; &nbsp;&nbsp;</td>
</tr>

<tr>
<td>&nbsp;运行</td>
<td>&nbsp;rails db:seed</td>
</tr>

<tr>
<td><br></td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>fixture</td>
<td>&nbsp;测试数据来初始化(也可以用seed)<br>

<table border="1" cellpadding="3" cellspacing="1" style="width: 688px;">

<tbody>

<tr>
<td>&nbsp;位置</td>
<td>&nbsp;test/fixtures/<br>&nbsp;表格名.rb</td>
</tr>

<tr>
<td>&nbsp;形式</td>
<td>&nbsp;yaml脚本<br>&nbsp;注: 缩进只能用手打两个空格</td>
</tr>

<tr>
<td>&nbsp;内容</td>
<td>&nbsp;标签:<br>&nbsp; &nbsp; 域名: 数值<br>&nbsp; &nbsp; ...<br>&nbsp;

<table border="1" cellpadding="3" cellspacing="1" style="width: 622px;">

<tbody>

<tr>
<td>&nbsp;外部键间接写法<br>&nbsp;仅yml文件内可用</td>
<td>&nbsp;模型名: 标签</td>
</tr>

<tr>
<td>&nbsp;缩进</td>
<td>&nbsp;手打的2个空格</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;运行</td>
<td>&nbsp;rails db:fixtures:load<br>

<table border="1" cellpadding="3" cellspacing="1" style="width: 622px;">

<tbody>

<tr>
<td>&nbsp;指定读取文件<br>&nbsp;位置: /test/fixtures/...</td>
<td>&nbsp;FIXTURES=sample1, samples2, ...<br>&nbsp;默认: 读取全部</td>
</tr>

<tr>
<td>&nbsp;指定测试环境</td>
<td>&nbsp;RAILS_ENV=prodution/test/development<br>&nbsp;默认: development</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;读取</td>
<td>&nbsp;rails db:fixtures:load
(FIXTURES=samples)</td>
</tr>

<tr>
<td>&nbsp;初始化</td>
<td>&nbsp;rails db:reset
(DISABLE_DATABASE_ENVIROMENT_CHECK=1)<br>
&nbsp;括号内内容是删除production模式的数据库<br>
&nbsp;windows下development模式好像也要</td>
</tr>

<tr>
<td>&nbsp;删除</td>
<td>&nbsp;rails db:drop:all
&nbsp;(DISABLE_DATABASE_ENVIROMENT_CHECK=1)<br>
&nbsp;括号内内容是删除production模式的数据库<br>
&nbsp;windows下development模式好像也要</td>
</tr>

<tr>
<td>服务器客户端&nbsp;</td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width: 100%;">

<tbody>

<tr>
<td>启动</td>
<td>&nbsp;rails db<br>
&nbsp;或 rails dbconsole</td>
</tr>

<tr>
<td>&nbsp;表格一览</td>
<td>&nbsp;.tables</td>
</tr>

<tr>
<td>&nbsp;确认特定表格结构</td>
<td>&nbsp;.schema samples</td>
</tr>

<tr>
<td>&nbsp;表格内容一览</td>
<td>&nbsp;SELECT * FROM samples;</td>
</tr>

<tr>
<td>&nbsp;关闭客户端</td>
<td>&nbsp;.quit</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

</tbody>

</table>
</div>
<div>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td colspan="2" style="text-align:center; font-size: 20px;">
<b>基本的数据检索</b></td>
</tr>

<tr>
<td>&nbsp;主键(key)搜索<br></td>
<td>&nbsp;Class.find(keys)<br>
&nbsp; 返回主键所对应的数据(一对一)


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;keys</td>
<td>&nbsp;主键的值<br>
&nbsp;可以用数组指定一串</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;指定键搜索</td>
<td>Class.find_by(key, value [,...])<br>
&nbsp;搜索指定的键对应的值<br>
&nbsp;可以指定多个键来追加限制&nbsp;<br>
&nbsp;返回找到的第一个</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td colspan="2" style="text-align:center; font-size: 20px;">
<b>复杂条件下的数据检索</b></td>
</tr>

<tr>
<td>&nbsp;设定基本条件式</td>
<td>&nbsp;Class.where(exp)<br>
&nbsp;返回找到的第一个<br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;exp</td>
<td>&nbsp;条件式<br>
&nbsp;哈希表形式</td>
</tr>

<tr>
<td>&nbsp;哈希表多种形式</td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;多个键</td>
<td>&nbsp;a: v1, b: v2,
...&nbsp;<br></td>
</tr>

<tr>
<td>&nbsp;键内范围</td>
<td>&nbsp;a: v1..v2<br>
或者a: (v1..v2)</td>
</tr>

<tr>
<td>&nbsp;键内指定多个元素</td>
<td>&nbsp;a: [v1, v2, v3, ...]<br></td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
&nbsp;</td>
</tr>

<tr>
<td>&nbsp;用占位符生成条件式</td>
<td>&nbsp;Class.where(exp [, value, ...])<br>
&nbsp;占位符: ?或者符号(symbol) :sample<br>
&nbsp;注意: 一定要用占位符，别把输入的字符直接展开进去。SQL可能会爆炸的233<br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;例</td>
<td>&nbsp;'israre = ? AND def &gt;= ?', false,
1000&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>'israre = :sample1 AND def &gt;= :sample2', sample1: false,
sample2: 1000</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;where的否定</td>
<td>&nbsp;Class.where.not(...)<br>
&nbsp;参数和where一样</td>
</tr>

<tr>
<td>&nbsp;or</td>
<td>&nbsp;Class.where(...).or(Class.where(...))<br>
<br>
&nbsp;ModelTest.where('ap &nbsp;&lt;= ?',
1000).or(ModelTest.where('def &gt; :def', :def =&gt; 4000))</td>
</tr>

<tr>
<td>&nbsp;排序</td>
<td>&nbsp;Class.where(...).order(sort)<br>
&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;参数</td>
<td><br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;sort</td>
<td>&nbsp;排序式<br>
&nbsp;例 :test =&gt; :asc<br>
&nbsp; &nbsp; &nbsp; test:
:asc<br>
&nbsp;默认 :asc, 可省略</td>
</tr>

<tr>
<td>&nbsp;格式</td>
<td>&nbsp;属性: 顺序</td>
</tr>

<tr>
<td>&nbsp;:asc</td>
<td>&nbsp;升序</td>
</tr>

<tr>
<td>&nbsp;:desc</td>
<td>&nbsp;降序&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;重排</td>
<td>
&nbsp;Class.where(...).order(sort).reorder(sort)<br>
&nbsp;写法和order一样<br>
&nbsp;作用是覆盖前面的order<br>
&nbsp;如果只是想清空前面的order,指定nil</td>
</tr>

<tr>
<td>&nbsp;指定读取的列</td>
<td>&nbsp;Class.where(...).select(cols)


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;cols</td>
<td>&nbsp;指定的列<br>
&nbsp;:hp, :mp,....</td>
</tr>

<tr>
<td>&nbsp;设置函数</td>
<td>&nbsp;AVG(sample) &nbsp;AS
avg_price<br>
<br>
&nbsp;Class.avg_price</td>
</tr>

<tr>
<td>&nbsp;select中使用SQL函数</td>
<td>&nbsp;例: Book.select('AVG(sample) AS
avg_sample')<br>
用AS设定名称</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;去除重复</td>
<td>&nbsp;Class.where(...).distinct(flag)<br>
&nbsp;Class.select(...).distinct(flag)<br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;flag</td>
<td>true 去除重复&nbsp;<br>
false 保留重复<br>
默认true</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;获取特定范围</td>
<td>&nbsp;limit/offset<br>
&nbsp;和order一起用才有现实意义<br>
&nbsp;limit(rows)<br>
&nbsp;offset(off)<br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;rows</td>
<td>&nbsp;最多获取的行数</td>
</tr>

<tr>
<td>&nbsp;off&nbsp;</td>
<td>&nbsp;开始获取的位置(从0开始)</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
ModelTest.where('hp &gt;= ? AND mp &gt;= ? AND ad &gt;= ?', 1000,
200, 1500).offset(1).limit(1)</td>
</tr>

<tr>
<td>&nbsp;获取开头/结尾</td>
<td>&nbsp;Class.first<br>
&nbsp;Class.last<br>
(也可以用limit(0))<br>
不能惰性读取，必须放在方法链最后</td>
</tr>

<tr>
<td>&nbsp;分组</td>
<td>&nbsp;Class.where(...).group(key)<br>
&nbsp;可以指定多个<br>
&nbsp;:a, :b, :c, ...<br></td>
</tr>

<tr>
<td>&nbsp;进一步提取信息&nbsp;</td>
<td>
&nbsp;Class.&nbsp;group&nbsp;(key).have(exp)<br>

&nbsp;exp写法参照p206<br>
&nbsp;@having = ModelTest.all.group(:israre).having('hp
&gt;= ?', 0)\</td>
</tr>

<tr>
<td>&nbsp;select中使用SQL函数</td>
<td>&nbsp;例: Book.select('AVG(sample) AS
avg_sample')<br>
用AS设定名称</td>
</tr>

<tr>
<td>&nbsp;去除条件</td>
<td>
&nbsp;Class.where(...).select(...)unscope(...).unscope(...)<br>

&nbsp;注意:unscoped是删除之前的所以条件


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;例<br>
ModelTest.where('def &lt;= :def AND israre = :israre', :def =&gt;
2000, :israre =&gt; false).select(:mp,
:mdf).unscope(:select).unscope(where:)<br></td>
</tr>

<tr>
<td>&nbsp;注意:
如果where里面用最简单的哈希定义，则unscope可以直接删除where的哈希值</td>
</tr>

<tr>
<td>&nbsp;ModelTest.where(israre: false).unscope(where:
:israre)</td>
</tr>

<tr>
<td>&nbsp;允许的参数 :where, :select, :group, :order, :lock,
:limit, :offset, :joins, :includes, :from, :readonly, :having</td>
</tr>

<tr>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;返回空对象<br></td>
<td>&nbsp;Class.none<br>
&nbsp;Class.where(...)....none<br>
注意: null是空，Class.none这类是空对象(NullObject),可以呼出each等而不出错<br></td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td><br></td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td colspan="2" style="text-align:center; font-size: 20px;">
<b>获取数据的其他方法</b></td>
</tr>

<tr>
<td>&nbsp;以数组形式取出列</td>
<td>&nbsp;Class.where(...).pluck(column [,...])<br>
&nbsp;例:ModelTest.all.pluck(:israre, :mp)</td>
</tr>

<tr>
<td>&nbsp;确认指定的数据是否存在</td>
<td>&nbsp;Class.where(...).exists?</td>
</tr>

<tr>
<td colspan="2" style="text-align: center;">
&nbsp;<b>自定义模型搜索方法</b></td>
</tr>

<tr>
<td>&nbsp;命名空间<br>
(Named Scope)</td>
<td>&nbsp;scope :name, -&gt;{ ... }<br>
&nbsp;scope :rare, -&gt; { where('israre = :israre',
israre: true) }<br>
<b>位置: /app/models/...</b><br>
调用: sample = Class.where(...).scope-name</td>
</tr>

<tr>
<td>&nbsp;设置默认方法</td>
<td>&nbsp;default_scope { ... }<br>
<b>位置: /app/models/...</b><br>
&nbsp;例: default_scope { order_with_hp }<br>
&nbsp; &nbsp;
&nbsp;&nbsp;scope :order_with_hp, -&gt;{
order(:hp) }</td>
</tr>

<tr>
<td colspan="2" style="text-align: center;">
&nbsp;<b>计算结果类</b></td>
</tr>

<tr>
<td>&nbsp;获取结果的行数(数量)&nbsp;</td>
<td>&nbsp;Class.where(...).count<br>
&nbsp;Class.where(...).size<br>
&nbsp;Class.where(...).length<br>
推荐用size，基本没有错</td>
</tr>

<tr>
<td>&nbsp;计算类</td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;平均值</td>
<td>&nbsp;average(col)</td>
</tr>

<tr>
<td>&nbsp;最大值</td>
<td>&nbsp;minimum(col)</td>
</tr>

<tr>
<td>&nbsp;最小值</td>
<td>&nbsp;maximum(col)</td>
</tr>

<tr>
<td>&nbsp;合计值</td>
<td>&nbsp;sum(col)</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;一般和group连用</td>
<td>
&nbsp;ModelTest.all.group(:israre).average(:hp)</td>
</tr>

<tr>
<td>&nbsp;注意</td>
<td>&nbsp;返回的是哈希表{group的值: 统计值 [, ...]}</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;直接使用SQL命令</td>
<td>&nbsp;<b>一般都用query method, 尽量不要直接用SQL命令</b><br>
&nbsp;find_by_sql(sql)<br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;sql&nbsp;</td>
<td>&nbsp;'....', val1 [, val2 ...]</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td colspan="2" style="text-align:center; font-size: 20px;">
<b>记录</b><b>(</b><b>record</b><b>)的登陆，更新，删除</b></td>
</tr>

<tr>
<td colspan="2" style="text-align: center;">
&nbsp;<b>基础</b></td>
</tr>

<tr>
<td>&nbsp;新建</td>
<td>&nbsp;Class.new<br>
&nbsp;Class.new(...)<br>
&nbsp;哈希表形式指定 {:hp =&gt; 54321, :mp =&gt; 12345,
israre: false}<br>
&nbsp;@new = ModelTest.new({:hp =&gt; 54321, :mp =&gt;
12345, israre: false})<br>
<a href="http://blog.photo.sina.com.cn/showpic.html#url=http://album.sina.com.cn/pic/0042BJjjzy7bTA68K8sa4" target="_blank"><img src="http://s5.sinaimg.cn/mw690/0042BJjjzy7bTA68K8sa4&amp;690"></a><br>

<br></td>
</tr>

<tr>
<td>&nbsp;登陆(保存)&nbsp;</td>
<td>&nbsp;Class#save<br>
&nbsp;返回true/false<br>
&nbsp;注: @sample.save!失败返回例外(用于transaction)<br>
&nbsp;例: @sample.save</td>
</tr>

<tr>
<td>&nbsp;更新</td>
<td>&nbsp;@sample.update(...)<br>
&nbsp;返回true/false<br>
&nbsp;哈希表形式指定 {:hp =&gt; 54321, :mp =&gt; 12345,
israre: false}<br>
&nbsp;用于已经存在的记录(record)</td>
</tr>

<tr>
<td>&nbsp;删除&nbsp;</td>
<td>&nbsp;@sample.delete<br>
<br>
&nbsp;delete(keys) 单纯删除<br>
&nbsp;destory(keys) &nbsp;先选择后删除,
新手还没理解delete的时候全用destroy就行<br>
<br>
例子: sample.delete<br>
&nbsp; &nbsp; &nbsp;
&nbsp; Class.delete(id)<br>
注: 用对象呼出时候不用指定id</td>
</tr>

<tr>
<td colspan="2" style="text-align: center;"><b>进一步的操作</b></td>
</tr>

<tr>
<td>&nbsp;全部更新</td>
<td>&nbsp;Class.where(...).update_all(updates)<br>
&nbsp;返回改动的行数</td>
</tr>

<tr>
<td>&nbsp;删除</td>
<td>&nbsp;delete(keys) 单纯删除<br>
&nbsp;destory(keys) &nbsp;先选择后删除,
新手还没理解delete的时候全用destroy就行<br>
<br>
例子: sample.delete<br>
&nbsp; &nbsp; &nbsp;
&nbsp; Class.delete(id)<br>
注: 用对象呼出时候不用指定id</td>
</tr>

<tr>
<td>&nbsp;全部删除</td>
<td>&nbsp;delete_all 先选择然后一个一个删除<br>
&nbsp;destory_all 直接一次性删除<br>
&nbsp;ModelTest.where('hp &gt; :hp', :hp =&gt;
5000).delete_all<br>
&nbsp;ModelTest.where('hp &gt; :hp', :hp =&gt;
5000).destory_all</td>
</tr>

<tr>
<td>&nbsp;transaction<br>
&nbsp;事务</td>
<td>&nbsp;def transaction<br>
&nbsp; &nbsp; Class.transaction do<br>
&nbsp; &nbsp; &nbsp;
&nbsp;....<br>
&nbsp; &nbsp; &nbsp;
&nbsp;raise ...<br>
&nbsp; &nbsp; &nbsp;
&nbsp;....<br>
&nbsp; &nbsp; &nbsp;
&nbsp;raise ...<br>
&nbsp; &nbsp; &nbsp;
&nbsp;...<br>
&nbsp; &nbsp; end<br>
&nbsp; &nbsp; rescue =&gt; e<br>
&nbsp; &nbsp; &nbsp;
&nbsp;...<br>
&nbsp;end<br>
<br>
用发出异常来终止transaction<br>
也可以用模块对象来呼出transaction<br>
<br>
经常用@sample.save! &nbsp;失败返回例外<br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;事务隔离等级</td>
<td>&nbsp;用:isolation标签指定<br>
&nbsp;:read_uncommitted<br>
&nbsp;:read_committed<br>
&nbsp;:repeatable_read<br>
&nbsp;:serializable</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;同时运行的管理</td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;乐观锁</td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;模块要追加列</td>
<td>&nbsp;追加lock_version:intefer<br>
&nbsp;<a href="http://blog.sina.com.cn/s/blog_dcb875d90102y62t.html" target="_blank">用命令行生成时候追加</a><br>
&nbsp;<b>已有的表格里也可以增加</b></td>
</tr>

<tr>
<td>&nbsp;在迁移文件中设置默认值</td>
<td>&nbsp;原来:t.intefer :lock_version<br>
&nbsp;更改成:t.intefer :lock_version<b>, default:
0</b></td>
</tr>

<tr>
<td>&nbsp;迁移</td>
<td>&nbsp;rails db:migrate</td>
</tr>

<tr>
<td>&nbsp;设置/改变成<a href="http://jingyan.baidu.com/article/ac6a9a5e44d9232b643eac60.html" target="_blank">隐藏输入框</a></td>
<td>&nbsp;《%= f.hidden_field :lock_version》<br>
如果有显示lock_version的，要删掉</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;定义枚举的的域</td>
<td>&nbsp;用与设置数字与符号的对应


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;设置过程</td>
<td>&nbsp;以status:integer为例


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;设置默认值<br>
&nbsp;<b>位置:迁移文件</b></td>
<td>&nbsp;t.integer :status<b>, default 0, null:
false</b></td>
</tr>

<tr>
<td>&nbsp;设置枚举<br>
&nbsp;<b>位置:模块类</b></td>
<td>&nbsp;enum status: {draft: 0, published: 1,
deleted: 2}</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;获取枚举</td>
<td>&nbsp;@sample = @sample.find_by(...)<br>
&nbsp;@sample.status</td>
</tr>

<tr>
<td>&nbsp;设置值</td>
<td>&nbsp;@sample.status = 1<br>
&nbsp;@sample.status = :published<br>
&nbsp;@sample.published!<br>
注: 设定没有定义好的值会出错, ArgumentError</td>
</tr>

<tr>
<td>&nbsp;列举值作搜索范围</td>
<td>&nbsp;@sample = Sample.published<br>
&nbsp;@sample = Sample.published.where(...)</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td colspan="2" style="text-align: center;">&nbsp;
<b>其他更新类方法</b></td>
</tr>

<tr>
<td>&nbsp;P245</td>
<td>&nbsp;暂略</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td colspan="2" style="text-align:center; font-size: 20px;">
<b>实现(実装)验证功能</b></td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td colspan="2" style="text-align:center; font-size: 20px;">
<b>用关联(association)处理复杂表格</b></td>
</tr>

<tr>
<td>&nbsp;命名规则</td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;外部键</td>
<td>&nbsp;sample_id<br>
&nbsp;注: 主键默认为id</td>
</tr>

<tr>
<td>&nbsp;中间表<br>
&nbsp;(过渡表)</td>
<td>&nbsp;用_按字母顺序连接<br>
&nbsp;modelTest_viewTest</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;参照的设置<br></td>
<td>&nbsp;belongs_to assoc_id [,opt]<br>
&nbsp;例:&nbsp;belongs_to :modeltest1<br>
&nbsp;一对一关系<br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;参数</td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;assoc_id</td>
<td>&nbsp;被关联的模块名<br>
&nbsp;<b>单数</b></td>
</tr>

<tr>
<td>&nbsp;opt</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;位置</td>
<td>&nbsp;写在参照的一方<br>
&nbsp;含义: sample_id属于...</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td><b>&nbsp;一对多</b></td>
<td>&nbsp;has_many assoc_id [,opt]<br>


<table border="1" cellpadding="3" cellspacing="1" style="width: 100%;">

<tbody>

<tr>
<td>&nbsp;参数</td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width: 100%;">

<tbody>

<tr>
<td>&nbsp;assoc_id</td>
<td>&nbsp;被关联的模块名<br>
&nbsp;<b>复数</b></td>
</tr>

<tr>
<td>&nbsp;opt</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;位置</td>
<td>&nbsp;写在被参照的一方<br>
&nbsp;由此被参照方可以获取参照方的数据</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;<b>一对一</b></td>
<td>&nbsp;has_one assoc_id [,opt]<br>


<table border="1" cellpadding="3" cellspacing="1" style="width: 100%;">

<tbody>

<tr>
<td>&nbsp;参数</td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width: 100%;">

<tbody>

<tr>
<td>&nbsp;assoc_id</td>
<td>&nbsp;被关联的模块名<br>
&nbsp;<b>单数</b></td>
</tr>

<tr>
<td>&nbsp;opt</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;位置</td>
<td>&nbsp;写在被参照的一方<br>
&nbsp;由此被参照方可以获取参照方的数据</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;<b>多对多<br>
&nbsp;m:n</b></td>
<td>&nbsp;has_and_belongs_to_many assoc_id [,
opt]<br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;参数<br></td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width: 100%;">

<tbody>

<tr>
<td>&nbsp;assoc_id</td>
<td>&nbsp;被关联的模块名<br>
&nbsp;<b>单数</b></td>
</tr>

<tr>
<td>&nbsp;opt</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;步骤&nbsp;</td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;创建中间表<br>
&nbsp;(过渡表)</td>
<td>&nbsp;用_按字母顺序连接<br>
&nbsp;modelTest_viewTest</td>
</tr>

<tr>
<td>&nbsp;关联双方定义处<br>
&nbsp;定义关联</td>
<td>&nbsp;has_and_belongs_to many</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;<b>多对多2<br>
&nbsp;m:n</b></td>
<td>&nbsp;a---b---c这种情况下，直接关联a---c<br>
&nbsp;has_many assoc_id, through: middle_id [,
opt]&nbsp;&nbsp;<br>
例<br>
&nbsp;b定义处<br>
&nbsp; &nbsp;belongs_to :a<br>
&nbsp; &nbsp;belongs_to :c<br>
&nbsp;a定义处<br>
&nbsp; &nbsp;has_many :b<br>
&nbsp; &nbsp;has_many :c through: :b<br>
&nbsp;c定义处<br>
&nbsp; &nbsp;has_many :b<br>
&nbsp; &nbsp;has_many :a through: :b</td>
</tr>

<tr>
<td>&nbsp;由关联自动定义的方法</td>
<td>&nbsp;p282~283<br>
&nbsp;略</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td colspan="2" style="text-align:center; font-size: 20px;">
<b>回调(call back)</b></td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;用例：注册时候每天的空白自动生成<br>
&nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; 注册或者更新时候自动发邮件<br>
&nbsp; &nbsp; &nbsp;
&nbsp; &nbsp; 注册更新时保存为履历等</td>
</tr>

<tr>
<td colspan="2" style="text-align: center;">
<b>&nbsp;回调函数</b></td>
</tr>

<tr>
<td>&nbsp;主要方法</td>
<td>&nbsp;<br>
<div style="text-align: left;">
<b>&nbsp;各时间点所对应函数</b></div>
<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;新建，更新，删除</td>
<td>&nbsp;create/create!, destroy/destroy!,
destroy_all<br>
&nbsp;<font color="#FF0000">increment!,
decrement!</font>, save/save!, <font color="#FF0000">toggle!,<br></font>&nbsp;update/update!,
<font color="#FF0000">update_attribute, valid?<br>
<b>红色: 之前跳过的</b></font></td>
</tr>

<tr>
<td>&nbsp;after_find</td>
<td>&nbsp;搜索数据库后<br>
&nbsp;all，first, find, find_by, find_by_sql<br>
&nbsp;</td>
</tr>

<tr>
<td>&nbsp;after_initialize</td>
<td>&nbsp;new来生成或者读取数据库后</td>
</tr>

</tbody>

</table>
<div style="text-align: left;"><b>&nbsp;回调函数</b></div>
<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td style="text-align: center;">&nbsp;创建</td>
<td style="text-align: center;">&nbsp;更新</td>
<td style="text-align: center;">&nbsp;删除</td>
<td style="text-align: center;">&nbsp;运行时间</td>
</tr>

<tr>
<td>&nbsp;before_validation</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;验证处理前</td>
</tr>

<tr>
<td>&nbsp;after_validation</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;验证处理后</td>
</tr>

<tr>
<td>&nbsp;before_save</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;保存前</td>
</tr>

<tr>
<td>&nbsp;around_save<br></td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;保存前后</td>
</tr>

<tr>
<td>&nbsp;before_create</td>
<td>&nbsp;before_update</td>
<td>&nbsp;before_destroy</td>
<td>&nbsp;新建/更新/删除前&nbsp;</td>
</tr>

<tr>
<td>&nbsp;around_create</td>
<td>&nbsp;around_update</td>
<td>&nbsp;around_destroy</td>
<td>&nbsp;新建/更新/删除前后</td>
</tr>

<tr>
<td>&nbsp;after_create</td>
<td>&nbsp;after_update<br></td>
<td>&nbsp;after_destroy&nbsp;</td>
<td>&nbsp;新建/更新/删除后</td>
</tr>

<tr>
<td>&nbsp;after_save</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;保存后</td>
</tr>

<tr>
<td>&nbsp;after_commit</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;commit后？</td>
</tr>

<tr>
<td>&nbsp;after_rollback</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;回调后</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td colspan="2" style="text-align:center; font-size: 20px;">
<b>迁移文件</b></td>
</tr>

<tr>
<td>&nbsp;位置</td>
<td>&nbsp;app/db/migrate/</td>
</tr>

<tr>
<td>&nbsp;构造</td>
<td>&nbsp;<br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;schame处理</td>
<td>&nbsp;change方法内部</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;主要方法</td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;create_table</td>
<td>&nbsp;create_table tname [,toption] do |t|<br>
&nbsp; &nbsp; t.type fname [,flag,
...]<br>
&nbsp; &nbsp; ...<br>
&nbsp;end<br>
&nbsp;<br>
&nbsp;<b><font style="font-size: 16px;">可用t.数据类型</font></b><br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;tname</td>
<td>&nbsp;表格名</td>
</tr>

<tr>
<td>&nbsp;toption</td>
<td>&nbsp;选项<br>
&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;id</td>
<td>&nbsp;是否自动生成主键<br>
&nbsp;默认: true</td>
</tr>

<tr>
<td>&nbsp;primary_key</td>
<td>&nbsp;主键的名称<br>
&nbsp;默认: id&nbsp;</td>
</tr>

<tr>
<td>&nbsp;temporary</td>
<td>&nbsp;是否作为暂时的表格<br>
&nbsp;默认: false</td>
</tr>

<tr>
<td>&nbsp;force&nbsp;</td>
<td>&nbsp;创建前是否删除已有的表格<br>
&nbsp;默认: false<br></td>
</tr>

<tr>
<td>&nbsp;options</td>
<td>&nbsp;其他的表格选项<br>
&nbsp;暂时不管<br>
&nbsp;p301</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td><br></td>
<td></td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;追加列</td>
<td>&nbsp;add_column(tname, fname, type [, opt])</td>
</tr>

<tr>
<td>&nbsp;追加索引</td>
<td>&nbsp;add_index(tname, fname [, i_opt])</td>
</tr>

<tr>
<td>&nbsp;追加外部键</td>
<td>&nbsp;add_foreign_key(tname, frname [,
fr_opt])</td>
</tr>

<tr>
<td>&nbsp;追加<br>
&nbsp;create_at<br>
&nbsp;update_at</td>
<td>&nbsp;add_timestamps(tname)</td>
</tr>

<tr>
<td>&nbsp;改变已有列</td>
<td>&nbsp;change_column(tname, fname, type [,
opt])</td>
</tr>

<tr>
<td>&nbsp;是否允许该列可以有null</td>
<td>&nbsp;change_column_null(tname, fname, null)<br>
&nbsp;null: true为不允许无效值<br>
&nbsp; &nbsp; &nbsp;
&nbsp; &nbsp;false允许</td>
</tr>

<tr>
<td>&nbsp;改变默认值</td>
<td>&nbsp;change_column_default(tname, fname,
default)</td>
</tr>

<tr>
<td>&nbsp;改变表格</td>
<td>&nbsp;change_table(tname)&nbsp;<br>
<br>
例:<br>
&nbsp;<b>change_table tname do |t|<br>
&nbsp; &nbsp; ...definition...<br>
&nbsp;end</b><br>
<br>
&nbsp;definition: 改变表格的指令<br>
<br>
<b>放在create_table，change_table代码块内<br></b><br>
&nbsp;在change_table代码块下能利用的方法<br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;index</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;change</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;change_default&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;rename</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;remove</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;remove_references</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;remove_index</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;remove_timestamps</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;确认指定列是否存在</td>
<td>&nbsp;column_exists?(tname, fname [, type
[,opt]])</td>
</tr>

<tr>
<td>&nbsp;创建表格</td>
<td>&nbsp;create_table(tname [,t_opt])<br>
&nbsp;最上面那个就是</td>
</tr>

<tr>
<td>&nbsp;创建中间表格</td>
<td>&nbsp;create_join_tabble(tname1, tname2 [,
t_opt])</td>
</tr>

<tr>
<td>&nbsp;删除已有表格</td>
<td>&nbsp;drop_table(tname [, opt])<br></td>
</tr>

<tr>
<td>&nbsp;确认索引是否存在</td>
<td>&nbsp;index_exists?(tname, fname [i_opt])</td>
</tr>

<tr>
<td>&nbsp;删除一个列</td>
<td>&nbsp;remove_column(tname, fname, [, type,
opt])</td>
</tr>

<tr>
<td>&nbsp;删除多个列</td>
<td>&nbsp;remove_columns(tname, fname [,...])</td>
</tr>

<tr>
<td>&nbsp;删除已有的索引</td>
<td>&nbsp;remove_index(tname [, i_opt])</td>
</tr>

<tr>
<td>&nbsp;删除外部键</td>
<td>&nbsp;remove_foreign_key(tname, frname)</td>
</tr>

<tr>
<td>&nbsp;重命名列</td>
<td>&nbsp;rename_column(tname, old, new)</td>
</tr>

<tr>
<td>&nbsp;重命名索引</td>
<td>&nbsp;rename_index(tname, old, new)</td>
</tr>

<tr>
<td>&nbsp;重命名表格</td>
<td>&nbsp;rename_table(tname, new)</td>
</tr>

<tr>
<td>&nbsp;执行sql指令</td>
<td>&nbsp;execute(sql)</td>
</tr>

<tr>
<td>&nbsp;opt</td>
<td>


<table border="1" cellpadding="3" cellspacing="1" style="width: 100%;">

<tbody>

<tr>
<td>&nbsp;limit</td>
<td>&nbsp;列的位数<br>
&nbsp;字符: 字符长度<br>
&nbsp;数字: 数字的字符长度(包含一切元素，如小数点)</td>
</tr>

<tr>
<td>&nbsp;defalut</td>
<td>&nbsp;默认值</td>
</tr>

<tr>
<td>&nbsp;NULL</td>
<td>&nbsp;是否允许null值<br>
&nbsp;默认true</td>
</tr>

<tr>
<td>&nbsp;precision</td>
<td>&nbsp;数值的总位数<br>
&nbsp;123.123 &nbsp;六位</td>
</tr>

<tr>
<td>&nbsp;scale</td>
<td>&nbsp;小数点以下的位数</td>
</tr>

<tr>
<td>&nbsp;polymorphic</td>
<td>&nbsp;belong_to关联所用的列</td>
</tr>

<tr>
<td>&nbsp;index</td>
<td>&nbsp;是否生成索引&nbsp;</td>
</tr>

<tr>
<td>&nbsp;comment</td>
<td>&nbsp;列的说明&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;t_opt<br>
&nbsp;table-option</td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width: 100%;">

<tbody>

<tr>
<td>&nbsp;id</td>
<td>&nbsp;是否自动生成主键<br>
&nbsp;默认: true</td>
</tr>

<tr>
<td>&nbsp;primary_key</td>
<td>&nbsp;主键的名称<br>
&nbsp;默认: id&nbsp;</td>
</tr>

<tr>
<td>&nbsp;temporary</td>
<td>&nbsp;是否作为暂时的表格<br>
&nbsp;默认: false</td>
</tr>

<tr>
<td>&nbsp;force&nbsp;</td>
<td>&nbsp;创建前是否删除已有的表格<br>
&nbsp;默认: false<br></td>
</tr>

<tr>
<td>&nbsp;options</td>
<td>&nbsp;其他的表格选项<br>
&nbsp;暂时不管<br>
&nbsp;p301</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;i_opt</td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;unique</td>
<td>&nbsp;是否保证每一个索引独一无二</td>
</tr>

<tr>
<td>&nbsp;name</td>
<td>&nbsp;索引名字&nbsp;</td>
</tr>

<tr>
<td>&nbsp;length</td>
<td>&nbsp;索引包含的列的长度<br>
&nbsp;length: {col1: 10, col2: 20}<br>
&nbsp;好处: 加快运行速度</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;fr_opt</td>
<td></td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;<b>t.数据类型</b></td>
<td><font style="font-size: 16px;">&nbsp;</font><b><font style="font-size: 16px;">放在create_table，change_table代码块内</font><br>
&nbsp;</b>可利用的数据类型和对应关系<br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;迁移</td>
<td>&nbsp;SQLite</td>
<td>&nbsp;Ruby</td>
</tr>

<tr>
<td>&nbsp;integer</td>
<td>&nbsp;INTEGER&nbsp;</td>
<td>&nbsp;<a href="http://blog.sina.com.cn/s/blog_dcb875d90102y5sj.html" target="_blank">Fixnum</a><br>
&nbsp;(就是Ruby里的普通整数)</td>
</tr>

<tr>
<td>&nbsp;decimal</td>
<td>&nbsp;DECIMAL</td>
<td>&nbsp;BigDecimal</td>
</tr>

<tr>
<td>&nbsp;float</td>
<td>&nbsp;FLOAT</td>
<td>&nbsp;Float</td>
</tr>

<tr>
<td>&nbsp;string</td>
<td>&nbsp;VARCHAR(255)</td>
<td>&nbsp;String</td>
</tr>

<tr>
<td>&nbsp;text</td>
<td>&nbsp;TEXT</td>
<td>&nbsp;String</td>
</tr>

<tr>
<td>&nbsp;binary</td>
<td>&nbsp;BLOB</td>
<td>&nbsp;String</td>
</tr>

<tr>
<td>&nbsp;date</td>
<td>&nbsp;DATE</td>
<td>&nbsp;Date</td>
</tr>

<tr>
<td>&nbsp;datetime</td>
<td>&nbsp;DATETIME</td>
<td>&nbsp;Time</td>
</tr>

<tr>
<td>&nbsp;timestamp</td>
<td>&nbsp;DATETIME&nbsp;</td>
<td>&nbsp;Time</td>
</tr>

<tr>
<td>&nbsp;time</td>
<td>&nbsp;TIME</td>
<td>&nbsp;Time</td>
</tr>

<tr>
<td>&nbsp;boolean</td>
<td>&nbsp;BOOLEAN</td>
<td>&nbsp;TrueClass/FalseClass</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;参照其他表格主键</td>
<td>&nbsp;<b>放在t.data的选项里<br>
&nbsp;如: t.integer, limit: 12<br>
&nbsp;</b>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;limit</td>
<td>&nbsp;列的位数<br>
&nbsp;字符: 字符长度<br>
&nbsp;数字: 数字的字符长度(包含一切元素，如小数点)</td>
</tr>

<tr>
<td>&nbsp;defalut</td>
<td>&nbsp;默认值</td>
</tr>

<tr>
<td>&nbsp;NULL</td>
<td>&nbsp;是否允许null值<br>
&nbsp;默认true</td>
</tr>

<tr>
<td>&nbsp;precision</td>
<td>&nbsp;数值的总位数<br>
&nbsp;123.123 &nbsp;六位</td>
</tr>

<tr>
<td>&nbsp;scale</td>
<td>&nbsp;小数点以下的位数</td>
</tr>

<tr>
<td>&nbsp;polymorphic</td>
<td>&nbsp;belong_to关联所用的列</td>
</tr>

<tr>
<td>&nbsp;index</td>
<td>&nbsp;是否生成索引&nbsp;</td>
</tr>

<tr>
<td>&nbsp;comment</td>
<td>&nbsp;列的说明&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
<b><br></b></td>
</tr>

<tr>
<td>&nbsp;模型处改变迁移文件数据类型</td>
<td>&nbsp;attribute(name, type [,default:
value])&nbsp;</td>
</tr>

<tr>
<td>&nbsp;<b>迁移文件的生成</b></td>
<td>&nbsp;和模型一起生成 rails generate model name field:type
[...] [options]<br>
&nbsp;单独生成 rails generate migration name [field:type
...] [options]<br></td>
</tr>

<tr>
<td>&nbsp;删除或者增加列</td>
<td>&nbsp;生成迁移文件时候命名<br>
&nbsp;rails g model AddXxxxTo表格名<br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;增加</td>
<td>&nbsp;AddXxxxTo表格名</td>
</tr>

<tr>
<td>&nbsp;删除</td>
<td>&nbsp;RemoveXxxxTo表格名</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;升级与回滚</td>
<td>&nbsp;p313~315</td>
</tr>

<tr>
<td>&nbsp;schema来构筑数据库</td>
<td>&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;schema文件位置</td>
<td>&nbsp;位置/app/db/schema.rb</td>
</tr>

<tr>
<td>&nbsp;意义</td>
<td>&nbsp;自动获取最新的数据库表格信息<br>
&nbsp;和迁移文件一样可能会有无法展现的对象(object)</td>
</tr>

<tr>
<td>&nbsp;放弃现在的数据库，<br>
&nbsp;用schema来构筑最新的数据库</td>
<td>&nbsp;rails db:reset<br>
windows环境下加DISABLE_DATABASE_ENVIROMENT=1<br>
<br>
注意: 只是重构，测试数据要另外读取</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td colspan="2" style="text-align: center;">
&nbsp;<b>数据库初始化</b></td>
</tr>

<tr>
<td>&nbsp;迁移和初始化一起</td>
<td>&nbsp;rails db:setup&nbsp;<br></td>
</tr>

<tr>
<td>&nbsp;seed file</td>
<td>&nbsp;初始数据来初始化(也可以用fixture)<br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;位置</td>
<td>&nbsp;db/seed.rb<br>
&nbsp;可能需要自己新建</td>
</tr>

<tr>
<td>&nbsp;形式</td>
<td>&nbsp;ruby脚本<br></td>
</tr>

<tr>
<td>&nbsp;内容</td>
<td>&nbsp;只需要写生成/保存数据的代码<br>
<br>
&nbsp;如Sample.new(...)<br>
&nbsp; &nbsp;&nbsp;</td>
</tr>

<tr>
<td>&nbsp;运行</td>
<td>&nbsp;rails db:seed</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;fixture</td>
<td>&nbsp;测试数据来初始化(也可以用seed)<br>


<table border="1" cellpadding="3" cellspacing="1" style="width: 100%;">

<tbody>

<tr>
<td>&nbsp;位置</td>
<td>&nbsp;test/fixtures/<br>
&nbsp;表格名.rb</td>
</tr>

<tr>
<td>&nbsp;形式</td>
<td>&nbsp;yaml脚本<br>
&nbsp;注: 缩进只能用手打两个空格</td>
</tr>

<tr>
<td>&nbsp;内容</td>
<td>&nbsp;标签:<br>
&nbsp; &nbsp; 域名: 数值<br>
&nbsp; &nbsp; ...<br>
&nbsp;


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;外部键间接写法<br>
&nbsp;仅yml文件内可用</td>
<td>&nbsp;模型名: 标签</td>
</tr>

<tr>
<td>&nbsp;缩进</td>
<td>&nbsp;手打的2个空格</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;运行</td>
<td>&nbsp;rails db:fixtures:load<br>


<table border="1" cellpadding="3" cellspacing="1" style="width:100%">

<tbody>

<tr>
<td>&nbsp;指定读取文件<br>
&nbsp;位置: /test/fixtures/...</td>
<td>&nbsp;FIXTURES=sample1, samples2, ...<br>
&nbsp;默认: 读取全部</td>
</tr>

<tr>
<td>&nbsp;指定测试环境</td>
<td>&nbsp;RAILS_ENV=prodution/test/development<br>
&nbsp;默认: development</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

<tr>
<td>&nbsp;</td>
<td>&nbsp;</td>
</tr>

</tbody>

</table>
</div>
